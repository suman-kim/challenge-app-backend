# 30일 챌린지 앱 요구사항 명세서

**문서 버전**: v1.0  
**작성일**: 2025년 7월 4일  
**작성자**: 개발팀  
**검토자**: 프로젝트 매니저  

---

## 📋 목차

1. [프로젝트 개요](#1-프로젝트-개요)
2. [시스템 개요](#2-시스템-개요)
3. [기능 요구사항](#3-기능-요구사항)
4. [비기능 요구사항](#4-비기능-요구사항)
5. [사용자 인터페이스 요구사항](#5-사용자-인터페이스-요구사항)
6. [시스템 아키텍처 요구사항](#6-시스템-아키텍처-요구사항)
7. [데이터 요구사항](#7-데이터-요구사항)
8. [보안 요구사항](#8-보안-요구사항)
9. [성능 요구사항](#9-성능-요구사항)
10. [제약사항](#10-제약사항)

---

## 1. 프로젝트 개요

### 1.1 프로젝트 목적
30일 챌린지 앱은 사용자들이 개인적인 목표를 설정하고 30일 동안 꾸준히 실행할 수 있도록 돕는 모바일 애플리케이션입니다. 사용자들은 다양한 카테고리의 챌린지에 참여하고, 일일 체크인을 통해 목표를 달성하며, 다른 사용자들과 경쟁하고 격려할 수 있습니다.

### 1.2 프로젝트 범위
- **포함 범위**: 모바일 앱 (React Native), 백엔드 서버 (NestJS), 데이터베이스 (MySQL)
- **제외 범위**: 웹 버전, 관리자 웹 대시보드, 외부 결제 시스템

### 1.3 대상 사용자
- **주 사용자**: 20-40대 자기계발에 관심 있는 개인
- **부 사용자**: 건강, 학습, 취미 등 특정 목표 달성을 원하는 모든 연령층

### 1.4 성공 기준
- 사용자 가입 후 30일 유지율 70% 이상
- 일일 활성 사용자(DAU) 월 가입자의 40% 이상
- 챌린지 완주율 60% 이상

---

## 2. 시스템 개요

### 2.1 시스템 목표
- 사용자 친화적이고 직관적인 챌린지 관리 시스템 제공
- 게이미피케이션을 통한 지속적인 동기부여
- 소셜 기능을 통한 커뮤니티 형성
- 안정적이고 확장 가능한 백엔드 시스템

### 2.2 핵심 기능 요약
1. **사용자 관리**: 회원가입, 로그인, 프로필 관리
2. **챌린지 시스템**: 챌린지 생성, 참여, 진행 관리
3. **체크인 시스템**: 일일 목표 달성 기록
4. **랭킹 시스템**: 사용자 순위 및 경쟁
5. **뱃지 시스템**: 성취 보상 및 동기부여
6. **소셜 기능**: 피드, 댓글, 좋아요
7. **통계 및 분석**: 개인 성과 추적

---

## 3. 기능 요구사항

### 3.1 사용자 관리 (User Management)

#### 3.1.1 회원가입 (REQ-001)
- **우선순위**: 높음
- **설명**: 사용자가 이메일과 비밀번호로 계정을 생성할 수 있어야 함
- **기능 요구사항**:
  - 이메일 주소 유효성 검증
  - 비밀번호 최소 6자 이상 요구
  - 이름 2-20자 제한
  - 이메일 중복 검사
  - 계정 생성 즉시 로그인 상태 유지
- **입력**: 이메일, 비밀번호, 이름
- **출력**: 사용자 정보, JWT 토큰
- **예외 상황**: 이메일 중복, 유효하지 않은 이메일 형식

#### 3.1.2 로그인 (REQ-002)
- **우선순위**: 높음
- **설명**: 등록된 이메일과 비밀번호로 로그인할 수 있어야 함
- **기능 요구사항**:
  - 이메일/비밀번호 인증
  - JWT 토큰 발급
  - 로그인 상태 7일간 유지
  - 자동 로그인 기능
- **입력**: 이메일, 비밀번호
- **출력**: 사용자 정보, JWT 토큰
- **예외 상황**: 잘못된 인증 정보, 비활성화된 계정

#### 3.1.3 프로필 관리 (REQ-003)
- **우선순위**: 보통
- **설명**: 사용자가 개인 정보를 조회하고 수정할 수 있어야 함
- **기능 요구사항**:
  - 프로필 이미지 업로드/변경
  - 이름 수정
  - 통계 정보 조회 (총 점수, 완료 챌린지 수, 연속 달성 일수)
  - 뱃지 컬렉션 조회
  - 계정 비활성화
- **입력**: 수정할 프로필 정보
- **출력**: 업데이트된 프로필 정보
- **예외 상황**: 유효하지 않은 이미지 형식

### 3.2 챌린지 시스템 (Challenge System)

#### 3.2.1 챌린지 생성 (REQ-004)
- **우선순위**: 높음
- **설명**: 사용자가 새로운 챌린지를 생성할 수 있어야 함
- **기능 요구사항**:
  - 15개 카테고리 중 선택 (피트니스, 건강, 공부, 독서, 명상, 물마시기, 수면, 식단, 취미, 업무, 소셜, 환경, 금융, 마음챙김, 창의성)
  - 3단계 난이도 설정 (쉬움-10점, 보통-20점, 어려움-30점)
  - 제목 2-100자, 설명 10-1000자 제한
  - 태그 시스템 (인기 태그 + 커스텀 태그)
  - 챌린지 기간 7-365일 설정 (기본 30일)
  - 생성자 자동 참여
- **입력**: 제목, 설명, 카테고리, 난이도, 태그, 기간
- **출력**: 생성된 챌린지 정보
- **예외 상황**: 필수 필드 누락, 유효하지 않은 카테고리/난이도

#### 3.2.2 챌린지 조회 (REQ-005)
- **우선순위**: 높음
- **설명**: 사용자가 다양한 방식으로 챌린지를 검색하고 조회할 수 있어야 함
- **기능 요구사항**:
  - 전체 챌린지 목록 조회 (페이지네이션)
  - 카테고리별 필터링
  - 난이도별 필터링
  - 키워드 검색 (제목, 설명)
  - 인기 챌린지 (참여자 수, 완료율 기준)
  - 추천 챌린지 (사용자가 참여하지 않은 챌린지)
  - 내가 참여한 챌린지 (진행 중, 완료, 중단)
- **입력**: 검색 조건, 페이지 정보
- **출력**: 챌린지 목록, 페이지네이션 정보
- **예외 상황**: 존재하지 않는 페이지

#### 3.2.3 챌린지 참여 (REQ-006)
- **우선순위**: 높음
- **설명**: 사용자가 기존 챌린지에 참여할 수 있어야 함
- **기능 요구사항**:
  - 원클릭 참여 시스템
  - 중복 참여 방지
  - 참여 메모 작성 (선택사항)
  - 참여 시점부터 30일 계산
  - 참여 통계 초기화
- **입력**: 챌린지 ID, 참여 메모 (선택)
- **출력**: 참여 확인 메시지, 참여 정보
- **예외 상황**: 이미 참여한 챌린지, 비활성 챌린지

#### 3.2.4 챌린지 탈퇴 (REQ-007)
- **우선순위**: 보통
- **설명**: 사용자가 참여 중인 챌린지에서 탈퇴할 수 있어야 함
- **기능 요구사항**:
  - 진행 중인 챌린지 탈퇴 가능
  - 기존 진행 기록 보존
  - 참여자 수 자동 감소
  - 탈퇴 후 재참여 가능
- **입력**: 챌린지 ID
- **출력**: 탈퇴 확인 메시지
- **예외 상황**: 참여하지 않은 챌린지

### 3.3 체크인 시스템 (Check-in System)

#### 3.3.1 일일 체크인 (REQ-008)
- **우선순위**: 높음
- **설명**: 사용자가 참여 중인 챌린지에 대해 일일 목표 달성을 기록할 수 있어야 함
- **기능 요구사항**:
  - 하루 한 번 체크인 제한
  - 체크인 메모 작성 (최대 200자)
  - 인증 사진 첨부 (선택사항)
  - 점수 자동 계산 및 적립
  - 연속 달성 일수 자동 계산
  - 체크인 완료 시 알림/피드백
- **입력**: 챌린지 ID, 메모, 사진 (선택)
- **출력**: 획득 점수, 현재 진행률, 연속 달성 일수
- **예외 상황**: 이미 체크인한 날짜, 참여하지 않은 챌린지

#### 3.3.2 체크인 기록 조회 (REQ-009)
- **우선순위**: 보통
- **설명**: 사용자가 체크인 히스토리를 확인할 수 있어야 함
- **기능 요구사항**:
  - 월별 캘린더 뷰
  - 체크인한 날짜 하이라이트
  - 체크인 메모 및 사진 조회
  - 연속 달성 기록 표시
  - 진행률 통계
- **입력**: 챌린지 ID, 조회 월
- **출력**: 체크인 기록 목록, 통계 정보
- **예외 상황**: 존재하지 않는 챌린지

### 3.4 랭킹 시스템 (Ranking System)

#### 3.4.1 전체 랭킹 (REQ-010)
- **우선순위**: 보통
- **설명**: 모든 사용자의 총 점수 기준 순위를 제공해야 함
- **기능 요구사항**:
  - 총 점수 기준 정렬
  - TOP 100 사용자 표시
  - 포디움 (1-3위) 특별 표시
  - 사용자 프로필 이미지 표시
  - 페이지네이션 (50명씩)
- **입력**: 페이지 번호
- **출력**: 랭킹 목록, 페이지 정보
- **예외 상황**: 유효하지 않은 페이지

#### 3.4.2 기간별 랭킹 (REQ-011)
- **우선순위**: 보통
- **설명**: 주간, 월간 기준으로 구분된 랭킹을 제공해야 함
- **기능 요구사항**:
  - 주간 랭킹 (최근 7일 점수)
  - 월간 랭킹 (현재 월 점수)
  - 실시간 업데이트
  - 순위 변동 표시
- **입력**: 랭킹 타입 (주간/월간), 페이지 번호
- **출력**: 기간별 랭킹 목록
- **예외 상황**: 잘못된 랭킹 타입

#### 3.4.3 내 랭킹 조회 (REQ-012)
- **우선순위**: 보통
- **설명**: 사용자가 전체 랭킹에서 자신의 위치를 확인할 수 있어야 함
- **기능 요구사항**:
  - 전체 순위에서 내 위치
  - 주변 사용자 순위 (위아래 5명)
  - 순위 변동 정보
  - 카테고리별 내 순위
- **입력**: 사용자 ID
- **출력**: 내 순위 정보, 주변 순위
- **예외 상황**: 존재하지 않는 사용자

### 3.5 뱃지 시스템 (Badge System)

#### 3.5.1 뱃지 획득 (REQ-013)
- **우선순위**: 보통
- **설명**: 사용자 활동에 따라 자동으로 뱃지를 획득할 수 있어야 함
- **기능 요구사항**:
  - 점수 기반 뱃지 (첫걸음-10점, 브론즈-100점, 실버-500점, 골드-1000점, 플래티넘-2500점)
  - 연속 달성 뱃지 (3일, 7일, 30일 연속)
  - 챌린지 완료 뱃지 (1개, 5개 완료)
  - 자동 획득 시스템
  - 뱃지 획득 알림
- **입력**: 사용자 활동 데이터
- **출력**: 획득한 뱃지 정보
- **예외 상황**: 이미 획득한 뱃지

#### 3.5.2 뱃지 컬렉션 (REQ-014)
- **우선순위**: 낮음
- **설명**: 사용자가 획득한 뱃지와 진행 상황을 확인할 수 있어야 함
- **기능 요구사항**:
  - 획득한 뱃지 목록
  - 진행 중인 뱃지와 진행률
  - 미획득 뱃지와 조건
  - 뱃지별 아이콘과 설명
  - 획득 일시 기록
- **입력**: 사용자 ID
- **출력**: 뱃지 컬렉션 정보
- **예외 상황**: 존재하지 않는 사용자

### 3.6 소셜 기능 (Social Features)

#### 3.6.1 피드 포스트 (REQ-015)
- **우선순위**: 보통
- **설명**: 사용자가 챌린지 인증이나 일상을 공유할 수 있어야 함
- **기능 요구사항**:
  - 텍스트 포스트 작성 (최대 2000자)
  - 이미지 첨부 (최대 5장)
  - 챌린지 연결 (선택사항)
  - 해시태그 지원
  - 포스트 수정/삭제
- **입력**: 포스트 내용, 이미지, 챌린지 ID (선택)
- **출력**: 생성된 포스트 정보
- **예외 상황**: 내용 없는 포스트, 잘못된 이미지 형식

#### 3.6.2 댓글 시스템 (REQ-016)
- **우선순위**: 보통
- **설명**: 포스트에 댓글과 대댓글을 작성할 수 있어야 함
- **기능 요구사항**:
  - 댓글 작성 (최대 500자)
  - 대댓글 지원 (1단계)
  - 댓글 수정/삭제
  - 댓글 좋아요
  - 실시간 댓글 수 업데이트
- **입력**: 포스트 ID, 댓글 내용, 부모 댓글 ID (선택)
- **출력**: 작성된 댓글 정보
- **예외 상황**: 존재하지 않는 포스트, 빈 댓글

#### 3.6.3 좋아요 시스템 (REQ-017)
- **우선순위**: 보통
- **설명**: 포스트에 좋아요를 표시하고 취소할 수 있어야 함
- **기능 요구사항**:
  - 좋아요/좋아요 취소 토글
  - 중복 좋아요 방지
  - 실시간 좋아요 수 업데이트
  - 내가 좋아요한 포스트 표시
- **입력**: 포스트 ID
- **출력**: 좋아요 상태, 총 좋아요 수
- **예외 상황**: 존재하지 않는 포스트

### 3.7 통계 및 분석 (Statistics & Analytics)

#### 3.7.1 개인 통계 (REQ-018)
- **우선순위**: 보통
- **설명**: 사용자의 활동에 대한 상세한 통계를 제공해야 함
- **기능 요구사항**:
  - 총 점수, 현재 연속 달성, 최장 연속 달성
  - 완료한 챌린지 수, 참여 중인 챌린지 수
  - 월별/주별 활동 통계
  - 카테고리별 활동 분석
  - 시각적 차트 데이터
- **입력**: 사용자 ID, 조회 기간
- **출력**: 통계 데이터, 차트 정보
- **예외 상황**: 존재하지 않는 사용자

#### 3.7.2 챌린지 통계 (REQ-019)
- **우선순위**: 낮음
- **설명**: 특정 챌린지의 전체 통계를 제공해야 함
- **기능 요구사항**:
  - 총 참여자 수, 완료자 수, 완료율
  - 일별 체크인 통계
  - 참여자 순위
  - 평균 진행률
- **입력**: 챌린지 ID
- **출력**: 챌린지 통계 정보
- **예외 상황**: 존재하지 않는 챌린지

---

## 4. 비기능 요구사항

### 4.1 성능 요구사항
- **응답 시간**: API 응답 시간 평균 200ms 이하, 최대 1초 이하
- **처리량**: 동시 사용자 1,000명 지원
- **확장성**: 사용자 수 10배 증가 시 수평 확장 가능
- **데이터베이스**: 쿼리 응답 시간 100ms 이하

### 4.2 가용성 요구사항
- **가동률**: 99.5% 이상 (월 3.6시간 이하 다운타임)
- **장애 복구**: 서비스 중단 시 30분 이내 복구
- **백업**: 일일 자동 백업, 7일간 보관

### 4.3 보안 요구사항
- **인증**: JWT 토큰 기반 인증, 7일 만료
- **데이터 암호화**: 비밀번호 bcrypt 해싱, HTTPS 통신
- **개인정보 보호**: GDPR 준수, 개인정보 수집 최소화
- **API 보안**: Rate Limiting, 입력 검증

### 4.4 사용성 요구사항
- **직관성**: 새 사용자도 5분 내 주요 기능 이해
- **접근성**: 색각 이상자, 시각 장애인 고려한 UI
- **다국어**: 한국어 우선, 향후 영어 지원 고려
- **반응성**: 모든 사용자 액션에 즉각적인 피드백

### 4.5 호환성 요구사항
- **모바일 플랫폼**: iOS 13+, Android 8+ (API 26+)
- **화면 크기**: 4.7인치 ~ 6.9인치 최적화
- **네트워크**: 3G 환경에서도 기본 기능 동작

---

## 5. 사용자 인터페이스 요구사항

### 5.1 전체 디자인 컨셉
- **디자인 스타일**: 모던하고 미니멀한 Material Design 3.0 기반
- **컬러 팔레트**: 
  - Primary: #6366F1 (인디고)
  - Secondary: #06B6D4 (사이안)
  - Success: #10B981 (그린)
  - Warning: #F59E0B (엠버)
  - Error: #EF4444 (레드)
- **타이포그래피**: SF Pro (iOS), Roboto (Android) 시스템 폰트
- **아이콘**: Lucide React 아이콘 세트

### 5.2 화면별 요구사항

#### 5.2.1 홈화면
- **헤더**: 로고, 알림 아이콘
- **통계 카드**: 참여 중인 챌린지 수, 연속 달성 일수, 총 점수
- **빠른 액션**: 새 챌린지 만들기 버튼 (그라데이션)
- **오늘의 챌린지**: 체크인 가능한 챌린지 목록
- **추천 챌린지**: 개인화된 추천 챌린지

#### 5.2.2 챌린지 상세 화면
- **헤더**: 뒤로가기, 제목, 더보기 메뉴
- **챌린지 정보**: 카테고리, 난이도, 설명, 생성자
- **진행 상황**: 원형 프로그레스바, D-day 표시
- **통계**: 참여자 수, 완료율
- **체크인 버튼**: 메인 액션 버튼
- **체크인 모달**: 메모 입력, 사진 첨부

#### 5.2.3 랭킹 화면
- **포디움**: 1-3위 특별 표시
- **랭킹 탭**: 전체, 주간, 월간
- **랭킹 리스트**: 순위, 프로필 이미지, 이름, 점수
- **내 순위**: 하단 고정 영역에 표시

#### 5.2.4 프로필 화면
- **프로필 헤더**: 아바타, 이름, 등급, 가입일
- **통계 카드**: 총 점수, 완료 챌린지, 획득 뱃지
- **뱃지 컬렉션**: 9개 등급 뱃지 그리드
- **설정 메뉴**: 알림, 개인정보, 도움말, 로그아웃

### 5.3 공통 UI 컴포넌트
- **버튼**: Primary, Secondary, Text 타입
- **카드**: 그림자 효과, 라운드 코너
- **프로그레스바**: 선형, 원형 타입
- **모달**: 반투명 배경, 슬라이드 애니메이션
- **토스트**: 성공, 오류, 정보 메시지

### 5.4 애니메이션 요구사항
- **페이지 전환**: 자연스러운 슬라이드 애니메이션 (300ms)
- **버튼 피드백**: 탭 시 스케일 애니메이션 (150ms)
- **로딩**: 스켈레톤 UI 또는 스피너
- **상태 변화**: 부드러운 트랜지션 효과

---

## 6. 시스템 아키텍처 요구사항

### 6.1 전체 아키텍처
```
📱 Mobile App (React Native)
     ↕ HTTPS/REST API
🖥️  Backend Server (NestJS)
     ↕ TypeORM
🗄️  Database (MySQL 8.0)
```

### 6.2 백엔드 아키텍처
- **아키텍처 패턴**: Clean Architecture (Hexagonal Architecture)
- **계층 구조**:
  - Presentation Layer: Controllers, DTOs
  - Application Layer: Services, Use Cases
  - Domain Layer: Entities, Business Logic
  - Infrastructure Layer: Database, External APIs

### 6.3 데이터베이스 아키텍처
- **데이터베이스**: MySQL 8.0
- **ORM**: TypeORM
- **연결 풀**: 최대 20개 연결
- **인덱싱**: 주요 검색 필드에 인덱스 적용
- **트랜잭션**: ACID 속성 보장

### 6.4 API 설계
- **프로토콜**: REST API over HTTPS
- **데이터 형식**: JSON
- **인증**: Bearer Token (JWT)
- **API 문서**: Swagger/OpenAPI 3.0
- **버전 관리**: URL 버전 관리 (/api/v1/)

### 6.5 보안 아키텍처
- **인증**: JWT 토큰 기반
- **권한**: Role-based Access Control
- **데이터 검증**: DTO 기반 입력 검증
- **에러 처리**: 민감 정보 노출 방지

---

## 7. 데이터 요구사항

### 7.1 데이터 모델

#### 7.1.1 사용자 (Users)
```sql
- id: INT (Primary Key)
- email: VARCHAR(255) UNIQUE
- password: VARCHAR(255) (암호화)
- name: VARCHAR(100)
- profile_image: VARCHAR(500)
- total_score: INT DEFAULT 0
- current_streak: INT DEFAULT 0
- longest_streak: INT DEFAULT 0
- completed_challenges: INT DEFAULT 0
- is_active: BOOLEAN DEFAULT true
- created_at: TIMESTAMP
- updated_at: TIMESTAMP
```

#### 7.1.2 챌린지 (Challenges)
```sql
- id: INT (Primary Key)
- title: VARCHAR(200)
- description: TEXT
- category: ENUM(fitness, health, study, ...)
- difficulty: ENUM(easy, medium, hard)
- tags: JSON
- duration: INT DEFAULT 30
- participant_count: INT DEFAULT 0
- completion_rate: DECIMAL(5,2) DEFAULT 0
- creator_id: INT (Foreign Key)
- is_active: BOOLEAN DEFAULT true
- is_official: BOOLEAN DEFAULT false
- created_at: TIMESTAMP
- updated_at: TIMESTAMP
```

#### 7.1.3 챌린지 참여 (Challenge_Participations)
```sql
- id: INT (Primary Key)
- user_id: INT (Foreign Key)
- challenge_id: INT (Foreign Key)
- current_progress: INT DEFAULT 0
- total_score: INT DEFAULT 0
- current_streak: INT DEFAULT 0
- longest_streak: INT DEFAULT 0
- is_completed: BOOLEAN DEFAULT false
- completed_at: TIMESTAMP NULL
- is_active: BOOLEAN DEFAULT true
- joined_at: TIMESTAMP
- updated_at: TIMESTAMP
```

#### 7.1.4 일일 체크인 (Daily_Checkins)
```sql
- id: INT (Primary Key)
- user_id: INT (Foreign Key)
- challenge_id: INT (Foreign Key)
- participation_id: INT (Foreign Key)
- checkin_date: DATE
- score: INT
- memo: TEXT
- photo: VARCHAR(500)
- created_at: TIMESTAMP
```

### 7.2 데이터 무결성
- **외래 키 제약**: 모든 관계에서 참조 무결성 보장
- **Unique 제약**: 이메일, 일일 체크인 (사용자+챌린지+날짜)
- **Check 제약**: 점수 >= 0, 진행률 0-100%
- **NOT NULL 제약**: 필수 필드에 적용

### 7.3 데이터 백업 및 복구
- **백업 주기**: 매일 새벽 2시 전체 백업
- **증분 백업**: 매 6시간 변경사항 백업
- **보관 기간**: 전체 백업 30일, 증분 백업 7일
- **복구 시간**: 장애 발생 시 30분 내 복구

---

## 8. 보안 요구사항

### 8.1 인증 및 권한
- **인증 방식**: JWT (JSON Web Token) 기반
- **토큰 만료**: 7일 (자동 연장 가능)
- **권한 관리**: Role-based (USER, MODERATOR, ADMIN)
- **세션 관리**: Stateless 토큰 방식

### 8.2 데이터 보안
- **비밀번호**: bcrypt 해싱 (Salt Rounds: 10)
- **데이터 전송**: HTTPS/TLS 1.3 암호화
- **민감 정보**: 로그에서 제외, 마스킹 처리
- **데이터베이스**: 백업 파일 암호화

### 8.3 API 보안
- **Rate Limiting**: IP당 100 req/min, 사용자당 1000 req/hour
- **CORS**: 허용된 도메인만 접근
- **Input Validation**: 모든 입력 데이터 검증
- **SQL Injection**: ORM 사용으로 방지

### 8.4 개인정보 보호
- **수집 최소화**: 필수 정보만 수집
- **데이터 익명화**: 통계 데이터는 개인 식별 불가
- **데이터 삭제**: 사용자 요청 시 30일 내 완전 삭제
- **접근 로그**: 개인정보 접근 기록 유지

---

## 9. 성능 요구사항

### 9.1 응답 시간
- **API 응답**: 평균 200ms, 최대 1초
- **데이터베이스 쿼리**: 평균 50ms, 최대 100ms
- **페이지 로딩**: 초기 로딩 3초 이내
- **이미지 로딩**: Progressive 로딩, 1초 이내

### 9.2 처리량
- **동시 사용자**: 1,000명 지원
- **API 요청**: 10,000 req/min 처리
- **데이터베이스**: 1,000 TPS 지원
- **파일 업로드**: 동시 100개 처리

### 9.3 자원 사용량
- **메모리**: 서버당 최대 2GB 사용
- **CPU**: 평상시 30% 이하, 피크 70% 이하
- **디스크**: 월 100GB 증가율 예상
- **네트워크**: 평균 10Mbps, 피크 100Mbps

### 9.4 확장성
- **수평 확장**: 로드 밸런서를 통한 서버 증설
- **데이터베이스**: Read Replica를 통한 읽기 성능 향상
- **캐싱**: Redis를 통한 세션 및 데이터 캐싱
- **CDN**: 이미지 파일 전용 CDN 적용

---

## 10. 제약사항

### 10.1 기술적 제약사항
- **프론트엔드**: React Native CLI (Expo는 제외)
- **백엔드**: NestJS + TypeScript
- **데이터베이스**: MySQL 8.0 이상
- **클라우드**: AWS 또는 Google Cloud Platform

### 10.2 시간적 제약사항
- **개발 기간**: 3개월 (MVP 버전)
- **베타 테스트**: 2주
- **정식 출시**: 개발 완료 후 1주 이내

### 10.3 예산 제약사항
- **서버 비용**: 월 100만원 이하
- **외부 서비스**: 월 50만원 이하
- **총 운영비**: 월 200만원 이하

### 10.4 규정 제약사항
- **개인정보보호법**: 국내 법령 준수
- **이용약관**: 명확한 서비스 이용 조건
- **저작권**: 사용된 모든 리소스 라이선스 확인

### 10.5 비즈니스 제약사항
- **사용자 수**: 초기 1만명, 1년 내 10만명 목표
- **수익 모델**: 초기에는 무료, 향후 프리미엄 기능 고려
- **마케팅**: 바이럴 마케팅 중심, 유료 광고 최소화

---

## 📋 요구사항 추적표

| 요구사항 ID | 분류 | 우선순위 | 상태 | 담당자 | 예상 공수 |
|------------|------|----------|------|-------|----------|
| REQ-001 | 사용자 관리 | 높음 | 완료 | Backend팀 | 3일 |
| REQ-002 | 사용자 관리 | 높음 | 완료 | Backend팀 | 2일 |
| REQ-003 | 사용자 관리 | 보통 | 완료 | Full-stack팀 | 4일 |
| REQ-004 | 챌린지 | 높음 | 완료 | Backend팀 | 5일 |
| REQ-005 | 챌린지 | 높음 | 완료 | Full-stack팀 | 4일 |
| REQ-006 | 챌린지 | 높음 | 완료 | Backend팀 | 3일 |
| REQ-007 | 챌린지 | 보통 | 완료 | Backend팀 | 2일 |
| REQ-008 | 체크인 | 높음 | 완료 | Backend팀 | 4일 |
| REQ-009 | 체크인 | 보통 | 완료 | Frontend팀 | 3일 |
| REQ-010 | 랭킹 | 보통 | 완료 | Backend팀 | 3일 |
| REQ-011 | 랭킹 | 보통 | 완료 | Backend팀 | 2일 |
| REQ-012 | 랭킹 | 보통 | 완료 | Backend팀 | 2일 |
| REQ-013 | 뱃지 | 보통 | 완료 | Backend팀 | 4일 |
| REQ-014 | 뱃지 | 낮음 | 완료 | Frontend팀 | 3일 |
| REQ-015 | 소셜 | 보통 | 완료 | Backend팀 | 4일 |
| REQ-016 | 소셜 | 보통 | 완료 | Backend팀 | 3일 |
| REQ-017 | 소셜 | 보통 | 완료 | Backend팀 | 2일 |
| REQ-018 | 통계 | 보통 | 완료 | Backend팀 | 3일 |
| REQ-019 | 통계 | 낮음 | 완료 | Backend팀 | 2일 |

---

## 📝 변경 이력

| 버전 | 날짜 | 변경사항 | 작성자 |
|------|------|----------|--------|
| v1.0 | 2025-07-04 | 초기 요구사항 명세서 작성 | 개발팀 |

---

**문서 승인**

| 역할 | 이름 | 서명 | 날짜 |
|------|------|------|------|
| 프로젝트 매니저 | | | |
| 기술 리더 | | | |
| 제품 책임자 | | | |

---

*이 문서는 30일 챌린지 앱 개발을 위한 공식 요구사항 명세서입니다. 모든 개발 활동은 이 문서를 기준으로 수행되어야 하며, 변경사항이 있을 경우 반드시 문서를 업데이트해야 합니다.*


# 30일 챌린지 앱 데이터베이스 명세서
## Database Specification Document

---

**문서 정보**
- **프로젝트명**: 30일 챌린지 앱 (30-Day Challenge App)
- **버전**: 1.0.0
- **작성일**: 2024년 12월
- **문서 유형**: 데이터베이스 명세서
- **데이터베이스**: MySQL 8.0
- **ORM**: TypeORM

---

## 📋 목차

1. [데이터베이스 개요](#1-데이터베이스-개요)
2. [ERD (Entity Relationship Diagram)](#2-erd-entity-relationship-diagram)
3. [테이블 명세](#3-테이블-명세)
4. [관계 정의](#4-관계-정의)
5. [인덱스 설계](#5-인덱스-설계)
6. [제약 조건](#6-제약-조건)
7. [데이터 딕셔너리](#7-데이터-딕셔너리)
8. [성능 최적화](#8-성능-최적화)
9. [백업 및 복구](#9-백업-및-복구)

---

## 1. 데이터베이스 개요

### 1.1 데이터베이스 설계 원칙
- **정규화**: 3차 정규형까지 적용하여 데이터 중복 최소화
- **성능 최적화**: 적절한 인덱스 설계로 쿼리 성능 향상
- **확장성**: 수평적/수직적 확장이 가능한 구조
- **무결성**: 참조 무결성 및 데이터 일관성 보장

### 1.2 데이터베이스 정보
- **DBMS**: MySQL 8.0
- **Character Set**: utf8mb4
- **Collation**: utf8mb4_unicode_ci
- **Engine**: InnoDB
- **타임존**: Asia/Seoul (UTC+9)

### 1.3 명명 규칙
- **테이블명**: snake_case (예: challenge_participants)
- **컬럼명**: snake_case (예: created_at)
- **인덱스명**: idx_테이블명_컬럼명 (예: idx_users_email)
- **외래키명**: fk_테이블명_참조테이블명 (예: fk_challenges_users)

---

## 2. ERD (Entity Relationship Diagram)

```
                    ┌─────────────┐
                    │    users    │
                    │------------- │
                    │ id (PK)     │
                    │ email       │
                    │ name        │
                    │ password    │
                    │ avatar_url  │
                    │ current_rank│
                    │ total_score │
                    │ ...         │
                    └─────────────┘
                           │
                           │ 1:N
                           ▼
              ┌─────────────────────────┐
              │     challenges         │
              │----------------------- │
              │ id (PK)               │
              │ title                 │
              │ description           │
              │ category_id (FK)      │
              │ creator_id (FK)       │
              │ difficulty            │
              │ reward_points         │
              │ ...                   │
              └─────────────────────────┘
                     │           │
                     │ N:M       │ 1:N
                     ▼           ▼
    ┌─────────────────────────┐   ┌─────────────────┐
    │ challenge_participants  │   │   categories    │
    │----------------------- │   │---------------- │
    │ id (PK)               │   │ id (PK)        │
    │ challenge_id (FK)     │   │ name           │
    │ user_id (FK)          │   │ icon           │
    │ joined_at             │   │ color          │
    │ status                │   │ description    │
    │ current_streak        │   │ ...            │
    │ ...                   │   └─────────────────┘
    └─────────────────────────┘
                │
                │ 1:N
                ▼
    ┌─────────────────────────┐
    │    daily_checkins       │
    │----------------------- │
    │ id (PK)               │
    │ participation_id (FK) │
    │ checkin_date          │
    │ note                  │
    │ photo_url             │
    │ mood                  │
    │ ...                   │
    └─────────────────────────┘

    ┌─────────────────┐       ┌─────────────────┐
    │    badges       │       │   user_badges   │
    │---------------- │  1:N  │---------------- │
    │ id (PK)        │◄──────│ id (PK)        │
    │ name           │       │ user_id (FK)   │
    │ description    │       │ badge_id (FK)  │
    │ icon           │       │ earned_at      │
    │ type           │       └─────────────────┘
    │ requirement... │
    └─────────────────┘

    ┌─────────────────┐       ┌─────────────────┐
    │     posts       │  1:N  │ post_comments   │
    │---------------- │◄──────│---------------- │
    │ id (PK)        │       │ id (PK)        │
    │ user_id (FK)   │       │ post_id (FK)   │
    │ challenge_id   │       │ user_id (FK)   │
    │ content        │       │ content        │
    │ image_url      │       │ parent_id      │
    │ post_type      │       │ ...            │
    │ ...            │       └─────────────────┘
    └─────────────────┘
           │
           │ 1:N
           ▼
    ┌─────────────────┐
    │   post_likes    │
    │---------------- │
    │ id (PK)        │
    │ post_id (FK)   │
    │ user_id (FK)   │
    │ created_at     │
    └─────────────────┘
```

---

## 3. 테이블 명세

### 3.1 users (사용자)
사용자 계정 정보와 통계를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 사용자 고유 ID |
| email | VARCHAR(255) | UNIQUE, NOT NULL | - | 사용자 이메일 (로그인 ID) |
| password | VARCHAR(255) | NOT NULL | - | 암호화된 비밀번호 |
| name | VARCHAR(100) | NOT NULL | - | 사용자 이름 |
| avatar_url | VARCHAR(500) | NULL | NULL | 프로필 이미지 URL |
| current_rank | ENUM | NOT NULL | 'bronze' | 현재 랭크 |
| total_score | INT | NOT NULL | 0 | 총 획득 점수 |
| completed_challenges | INT | NOT NULL | 0 | 완료한 챌린지 수 |
| current_streak | INT | NOT NULL | 0 | 현재 연속 체크인 일수 |
| longest_streak | INT | NOT NULL | 0 | 최장 연속 체크인 일수 |
| joined_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 가입일시 |
| updated_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP ON UPDATE | 수정일시 |
| is_active | BOOLEAN | NOT NULL | TRUE | 계정 활성화 여부 |
| notification_enabled | BOOLEAN | NOT NULL | TRUE | 알림 수신 여부 |

**랭크 ENUM 값**: bronze, silver, gold, platinum, diamond, master, grandmaster, challenger, legend

### 3.2 categories (카테고리)
챌린지 카테고리 정보를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 카테고리 고유 ID |
| name | VARCHAR(50) | NOT NULL | - | 카테고리 이름 |
| icon | VARCHAR(100) | NOT NULL | - | 카테고리 아이콘 |
| color | VARCHAR(7) | NOT NULL | - | 카테고리 색상 (HEX) |
| description | TEXT | NULL | NULL | 카테고리 설명 |
| created_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 생성일시 |

### 3.3 challenges (챌린지)
챌린지 정보를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 챌린지 고유 ID |
| title | VARCHAR(200) | NOT NULL | - | 챌린지 제목 |
| description | TEXT | NULL | NULL | 챌린지 설명 |
| category_id | INT | NOT NULL, FOREIGN KEY | - | 카테고리 ID |
| difficulty | ENUM | NOT NULL | - | 난이도 (easy, medium, hard) |
| creator_id | INT | NOT NULL, FOREIGN KEY | - | 생성자 사용자 ID |
| duration_days | INT | NOT NULL | 30 | 챌린지 기간 (일) |
| reward_points | INT | NOT NULL | - | 완료 시 보상 점수 |
| max_participants | INT | NULL | NULL | 최대 참여자 수 |
| start_date | DATE | NULL | NULL | 시작일 |
| end_date | DATE | NULL | NULL | 종료일 |
| is_public | BOOLEAN | NOT NULL | TRUE | 공개 여부 |
| is_active | BOOLEAN | NOT NULL | TRUE | 활성화 여부 |
| participants_count | INT | NOT NULL | 0 | 현재 참여자 수 |
| created_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 생성일시 |
| updated_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP ON UPDATE | 수정일시 |

### 3.4 challenge_participants (챌린지 참여자)
사용자의 챌린지 참여 정보를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 참여 고유 ID |
| challenge_id | INT | NOT NULL, FOREIGN KEY | - | 챌린지 ID |
| user_id | INT | NOT NULL, FOREIGN KEY | - | 사용자 ID |
| joined_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 참여일시 |
| completed_at | TIMESTAMP | NULL | NULL | 완료일시 |
| is_completed | BOOLEAN | NOT NULL | FALSE | 완료 여부 |
| current_streak | INT | NOT NULL | 0 | 현재 연속 체크인 일수 |
| total_checkins | INT | NOT NULL | 0 | 총 체크인 횟수 |
| earned_points | INT | NOT NULL | 0 | 획득한 점수 |
| status | ENUM | NOT NULL | 'active' | 참여 상태 |

**상태 ENUM 값**: active, completed, failed, paused

**복합 UNIQUE 키**: (challenge_id, user_id)

### 3.5 daily_checkins (일일 체크인)
일일 체크인 기록을 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 체크인 고유 ID |
| participation_id | INT | NOT NULL, FOREIGN KEY | - | 참여 ID |
| checkin_date | DATE | NOT NULL | - | 체크인 날짜 |
| note | TEXT | NULL | NULL | 체크인 메모 |
| photo_url | VARCHAR(500) | NULL | NULL | 인증 사진 URL |
| mood | ENUM | NOT NULL | 'happy' | 기분 상태 |
| created_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 생성일시 |

**기분 ENUM 값**: very_sad, sad, happy, very_happy, excited

**복합 UNIQUE 키**: (participation_id, checkin_date)

### 3.6 tags (태그)
챌린지 태그 정보를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 태그 고유 ID |
| name | VARCHAR(50) | UNIQUE, NOT NULL | - | 태그 이름 |
| usage_count | INT | NOT NULL | 0 | 사용 횟수 |
| created_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 생성일시 |

### 3.7 challenge_tags (챌린지-태그 연결)
챌린지와 태그의 다대다 관계를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| challenge_id | INT | NOT NULL, FOREIGN KEY | - | 챌린지 ID |
| tag_id | INT | NOT NULL, FOREIGN KEY | - | 태그 ID |

**복합 PRIMARY KEY**: (challenge_id, tag_id)

### 3.8 badges (뱃지)
뱃지 정보를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 뱃지 고유 ID |
| name | VARCHAR(100) | NOT NULL | - | 뱃지 이름 |
| description | TEXT | NULL | NULL | 뱃지 설명 |
| icon | VARCHAR(100) | NOT NULL | - | 뱃지 아이콘 |
| type | ENUM | NOT NULL | - | 뱃지 타입 |
| requirement_type | ENUM | NOT NULL | - | 요구사항 타입 |
| requirement_value | INT | NULL | NULL | 요구사항 값 |
| rarity | ENUM | NOT NULL | 'common' | 희귀도 |
| created_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 생성일시 |

**타입 ENUM 값**:
- type: rank, achievement, special
- requirement_type: score, challenges, streak, special
- rarity: common, rare, epic, legendary

### 3.9 user_badges (사용자 뱃지)
사용자가 획득한 뱃지 정보를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 고유 ID |
| user_id | INT | NOT NULL, FOREIGN KEY | - | 사용자 ID |
| badge_id | INT | NOT NULL, FOREIGN KEY | - | 뱃지 ID |
| earned_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 획득일시 |

**복합 UNIQUE 키**: (user_id, badge_id)

### 3.10 posts (포스트)
소셜 피드 포스트 정보를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 포스트 고유 ID |
| user_id | INT | NOT NULL, FOREIGN KEY | - | 작성자 사용자 ID |
| challenge_id | INT | NULL, FOREIGN KEY | NULL | 연관 챌린지 ID |
| content | TEXT | NOT NULL | - | 포스트 내용 |
| image_url | VARCHAR(500) | NULL | NULL | 이미지 URL |
| post_type | ENUM | NOT NULL | 'story' | 포스트 타입 |
| likes_count | INT | NOT NULL | 0 | 좋아요 수 |
| comments_count | INT | NOT NULL | 0 | 댓글 수 |
| is_public | BOOLEAN | NOT NULL | TRUE | 공개 여부 |
| created_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 생성일시 |
| updated_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP ON UPDATE | 수정일시 |

**포스트 타입 ENUM 값**: story, achievement, milestone, motivation

### 3.11 post_likes (포스트 좋아요)
포스트 좋아요 정보를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 고유 ID |
| post_id | INT | NOT NULL, FOREIGN KEY | - | 포스트 ID |
| user_id | INT | NOT NULL, FOREIGN KEY | - | 사용자 ID |
| created_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 생성일시 |

**복합 UNIQUE 키**: (post_id, user_id)

### 3.12 post_comments (포스트 댓글)
포스트 댓글 정보를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 댓글 고유 ID |
| post_id | INT | NOT NULL, FOREIGN KEY | - | 포스트 ID |
| user_id | INT | NOT NULL, FOREIGN KEY | - | 작성자 사용자 ID |
| content | TEXT | NOT NULL | - | 댓글 내용 |
| parent_id | INT | NULL, FOREIGN KEY | NULL | 부모 댓글 ID (대댓글) |
| created_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 생성일시 |
| updated_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP ON UPDATE | 수정일시 |

### 3.13 notifications (알림)
사용자 알림 정보를 저장하는 테이블

| 컬럼명 | 데이터타입 | 제약조건 | 기본값 | 설명 |
|--------|------------|----------|--------|------|
| id | INT | PRIMARY KEY, AUTO_INCREMENT | - | 알림 고유 ID |
| user_id | INT | NOT NULL, FOREIGN KEY | - | 수신자 사용자 ID |
| type | ENUM | NOT NULL | - | 알림 타입 |
| title | VARCHAR(200) | NOT NULL | - | 알림 제목 |
| message | TEXT | NULL | NULL | 알림 메시지 |
| data | JSON | NULL | NULL | 추가 데이터 |
| is_read | BOOLEAN | NOT NULL | FALSE | 읽음 여부 |
| created_at | TIMESTAMP | NOT NULL | CURRENT_TIMESTAMP | 생성일시 |

**알림 타입 ENUM 값**: challenge_reminder, achievement, social, system

---

## 4. 관계 정의

### 4.1 일대다 (1:N) 관계

#### 4.1.1 users ↔ challenges
- **관계**: 한 사용자는 여러 챌린지를 생성할 수 있음
- **외래키**: challenges.creator_id → users.id
- **삭제 규칙**: CASCADE (사용자 삭제 시 생성한 챌린지도 삭제)

#### 4.1.2 categories ↔ challenges
- **관계**: 한 카테고리는 여러 챌린지를 가질 수 있음
- **외래키**: challenges.category_id → categories.id
- **삭제 규칙**: RESTRICT (사용 중인 카테고리는 삭제 불가)

#### 4.1.3 challenge_participants ↔ daily_checkins
- **관계**: 한 참여는 여러 체크인을 가질 수 있음
- **외래키**: daily_checkins.participation_id → challenge_participants.id
- **삭제 규칙**: CASCADE (참여 삭제 시 체크인 기록도 삭제)

#### 4.1.4 users ↔ posts
- **관계**: 한 사용자는 여러 포스트를 작성할 수 있음
- **외래키**: posts.user_id → users.id
- **삭제 규칙**: CASCADE (사용자 삭제 시 포스트도 삭제)

#### 4.1.5 posts ↔ post_comments
- **관계**: 한 포스트는 여러 댓글을 가질 수 있음
- **외래키**: post_comments.post_id → posts.id
- **삭제 규칙**: CASCADE (포스트 삭제 시 댓글도 삭제)

### 4.2 다대다 (N:M) 관계

#### 4.2.1 users ↔ challenges (through challenge_participants)
- **관계**: 한 사용자는 여러 챌린지에 참여, 한 챌린지는 여러 사용자가 참여
- **중간 테이블**: challenge_participants
- **외래키**: 
  - challenge_participants.user_id → users.id
  - challenge_participants.challenge_id → challenges.id

#### 4.2.2 challenges ↔ tags (through challenge_tags)
- **관계**: 한 챌린지는 여러 태그, 한 태그는 여러 챌린지에 사용
- **중간 테이블**: challenge_tags
- **외래키**:
  - challenge_tags.challenge_id → challenges.id
  - challenge_tags.tag_id → tags.id

#### 4.2.3 users ↔ badges (through user_badges)
- **관계**: 한 사용자는 여러 뱃지 획득, 한 뱃지는 여러 사용자가 획득
- **중간 테이블**: user_badges
- **외래키**:
  - user_badges.user_id → users.id
  - user_badges.badge_id → badges.id

### 4.3 자기 참조 관계

#### 4.3.1 post_comments (Self-Reference)
- **관계**: 댓글의 대댓글 구조
- **외래키**: post_comments.parent_id → post_comments.id
- **삭제 규칙**: CASCADE (부모 댓글 삭제 시 대댓글도 삭제)

---

## 5. 인덱스 설계

### 5.1 기본 키 인덱스 (자동 생성)
모든 테이블의 PRIMARY KEY에 대해 자동으로 UNIQUE 인덱스 생성

### 5.2 고유 인덱스 (UNIQUE)
```sql
-- 사용자 이메일 (로그인용)
CREATE UNIQUE INDEX idx_users_email ON users(email);

-- 태그 이름
CREATE UNIQUE INDEX idx_tags_name ON tags(name);

-- 챌린지 참여 (중복 참여 방지)
CREATE UNIQUE INDEX idx_challenge_participants_unique ON challenge_participants(challenge_id, user_id);

-- 일일 체크인 (중복 체크인 방지)
CREATE UNIQUE INDEX idx_daily_checkins_unique ON daily_checkins(participation_id, checkin_date);

-- 뱃지 획득 (중복 획득 방지)
CREATE UNIQUE INDEX idx_user_badges_unique ON user_badges(user_id, badge_id);

-- 포스트 좋아요 (중복 좋아요 방지)
CREATE UNIQUE INDEX idx_post_likes_unique ON post_likes(post_id, user_id);
```

### 5.3 복합 인덱스 (성능 최적화)
```sql
-- 사용자 점수 랭킹 조회용
CREATE INDEX idx_users_score_rank ON users(total_score DESC, id);

-- 챌린지 목록 조회용 (카테고리별, 활성, 공개)
CREATE INDEX idx_challenges_list ON challenges(category_id, is_active, is_public, created_at DESC);

-- 챌린지 검색용 (제목, 설명)
CREATE FULLTEXT INDEX idx_challenges_search ON challenges(title, description);

-- 사용자 참여 챌린지 조회용
CREATE INDEX idx_challenge_participants_user ON challenge_participants(user_id, status, joined_at DESC);

-- 체크인 통계 조회용
CREATE INDEX idx_daily_checkins_stats ON daily_checkins(participation_id, checkin_date);

-- 포스트 피드 조회용 (공개, 최신순)
CREATE INDEX idx_posts_feed ON posts(is_public, created_at DESC);

-- 사용자 포스트 조회용
CREATE INDEX idx_posts_user ON posts(user_id, created_at DESC);

-- 알림 조회용 (사용자별, 읽음 여부, 최신순)
CREATE INDEX idx_notifications_user ON notifications(user_id, is_read, created_at DESC);

-- 태그 인기도 순서
CREATE INDEX idx_tags_usage ON tags(usage_count DESC);
```

### 5.4 단일 컬럼 인덱스
```sql
-- 외래키 성능 향상
CREATE INDEX idx_challenges_creator ON challenges(creator_id);
CREATE INDEX idx_challenges_category ON challenges(category_id);
CREATE INDEX idx_posts_challenge ON posts(challenge_id);
CREATE INDEX idx_post_comments_post ON post_comments(post_id);
CREATE INDEX idx_post_comments_parent ON post_comments(parent_id);

-- 날짜 기반 조회
CREATE INDEX idx_users_joined_at ON users(joined_at);
CREATE INDEX idx_challenges_start_date ON challenges(start_date);
CREATE INDEX idx_daily_checkins_date ON daily_checkins(checkin_date);

-- 상태 기반 조회
CREATE INDEX idx_challenges_active ON challenges(is_active);
CREATE INDEX idx_users_active ON users(is_active);
CREATE INDEX idx_challenge_participants_status ON challenge_participants(status);
```

---

## 6. 제약 조건

### 6.1 NOT NULL 제약 조건
중요한 데이터 필드에 대해 NULL 값 방지
- 사용자 기본 정보 (email, name, password)
- 챌린지 기본 정보 (title, difficulty, creator_id)
- 시스템 필수 필드 (created_at, updated_at)

### 6.2 UNIQUE 제약 조건
데이터 중복 방지
- users.email (이메일 중복 방지)
- tags.name (태그명 중복 방지)
- 복합 UNIQUE (중복 행동 방지)

### 6.3 CHECK 제약 조건
```sql
-- 점수는 0 이상
ALTER TABLE users ADD CONSTRAINT chk_users_positive_scores 
CHECK (total_score >= 0 AND completed_challenges >= 0 AND current_streak >= 0 AND longest_streak >= 0);

-- 연속일 논리적 제약
ALTER TABLE users ADD CONSTRAINT chk_users_streak_logic 
CHECK (longest_streak >= current_streak);

-- 챌린지 기간은 1일 이상
ALTER TABLE challenges ADD CONSTRAINT chk_challenges_duration 
CHECK (duration_days >= 1 AND duration_days <= 365);

-- 보상 점수는 양수
ALTER TABLE challenges ADD CONSTRAINT chk_challenges_reward 
CHECK (reward_points > 0);

-- 참여자 수는 0 이상
ALTER TABLE challenges ADD CONSTRAINT chk_challenges_participants 
CHECK (participants_count >= 0);

-- 최대 참여자 수 논리적 제약
ALTER TABLE challenges ADD CONSTRAINT chk_challenges_max_participants 
CHECK (max_participants IS NULL OR max_participants > 0);

-- 체크인 날짜는 미래가 될 수 없음
ALTER TABLE daily_checkins ADD CONSTRAINT chk_checkins_date 
CHECK (checkin_date <= CURDATE());

-- 좋아요/댓글 수는 0 이상
ALTER TABLE posts ADD CONSTRAINT chk_posts_counts 
CHECK (likes_count >= 0 AND comments_count >= 0);
```

### 6.4 외래키 제약 조건
```sql
-- 참조 무결성 보장
ALTER TABLE challenges 
ADD CONSTRAINT fk_challenges_creator 
FOREIGN KEY (creator_id) REFERENCES users(id) ON DELETE CASCADE;

ALTER TABLE challenges 
ADD CONSTRAINT fk_challenges_category 
FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE RESTRICT;

ALTER TABLE challenge_participants 
ADD CONSTRAINT fk_participants_challenge 
FOREIGN KEY (challenge_id) REFERENCES challenges(id) ON DELETE CASCADE;

ALTER TABLE challenge_participants 
ADD CONSTRAINT fk_participants_user 
FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE;

-- 나머지 외래키 제약 조건들...
```

---

## 7. 데이터 딕셔너리

### 7.1 ENUM 값 정의

#### 7.1.1 사용자 랭크 (user_rank)
| 값 | 한글명 | 필요 점수 | 설명 |
|----|--------|-----------|------|
| bronze | 브론즈 | 0-999 | 초보자 랭크 |
| silver | 실버 | 1000-2999 | 기본 랭크 |
| gold | 골드 | 3000-5999 | 중급자 랭크 |
| platinum | 플래티넘 | 6000-9999 | 상급자 랭크 |
| diamond | 다이아몬드 | 10000-14999 | 고급 랭크 |
| master | 마스터 | 15000-24999 | 전문가 랭크 |
| grandmaster | 그랜드마스터 | 25000-39999 | 최고급 랭크 |
| challenger | 챌린저 | 40000-59999 | 도전자 랭크 |
| legend | 레전드 | 60000+ | 전설 랭크 |

#### 7.1.2 챌린지 난이도 (challenge_difficulty)
| 값 | 한글명 | 보상 배율 | 설명 |
|----|--------|-----------|------|
| easy | 쉬움 | 1.0x | 누구나 쉽게 할 수 있는 난이도 |
| medium | 보통 | 1.5x | 어느 정도 노력이 필요한 난이도 |
| hard | 어려움 | 2.0x | 상당한 의지력이 필요한 난이도 |

#### 7.1.3 참여 상태 (participation_status)
| 값 | 한글명 | 설명 |
|----|--------|------|
| active | 활성 | 현재 진행 중인 상태 |
| completed | 완료 | 성공적으로 완료한 상태 |
| failed | 실패 | 중도 포기하거나 실패한 상태 |
| paused | 일시정지 | 임시로 중단한 상태 |

#### 7.1.4 기분 상태 (mood)
| 값 | 이모지 | 설명 |
|----|--------|------|
| very_sad | 😢 | 매우 슬픔 |
| sad | 😐 | 슬픔 |
| happy | 😊 | 기쁨 (기본값) |
| very_happy | 😄 | 매우 기쁨 |
| excited | 🤩 | 흥분됨 |

### 7.2 기본 데이터

#### 7.2.1 카테고리 초기 데이터
```sql
INSERT INTO categories (name, icon, color, description) VALUES
('건강', '💪', '#FF6B6B', '운동, 다이어트, 건강한 습관'),
('학습', '📚', '#4ECDC4', '독서, 언어, 새로운 기술'),
('창작', '🎨', '#45B7D1', '그림, 글쓰기, 음악, 사진'),
('관계', '❤️', '#96CEB4', '가족, 친구, 네트워킹'),
('취미', '🎵', '#FFEAA7', '음악, 게임, 컬렉션'),
('여행', '✈️', '#DDA0DD', '새로운 장소, 문화 체험'),
('요리', '🍳', '#FFB347', '새로운 레시피, 요리 기술'),
('환경', '🌱', '#90EE90', '친환경 생활, 제로웨이스트'),
('자기계발', '🚀', '#87CEEB', '명상, 자기관리, 성장'),
('운동', '🏃', '#FFA07A', '러닝, 근력, 요가'),
('독서', '📖', '#D2B48C', '책 읽기, 지식 습득'),
('금융', '💰', '#F0E68C', '저축, 투자, 가계부'),
('소셜', '👥', '#FFB6C1', '사람들과의 소통'),
('기술', '💻', '#B0E0E6', '프로그래밍, IT 기술'),
('라이프스타일', '✨', '#E6E6FA', '일상의 작은 변화');
```

#### 7.2.2 뱃지 초기 데이터
```sql
INSERT INTO badges (name, description, icon, type, requirement_type, requirement_value, rarity) VALUES
-- 랭크 뱃지
('브론즈 뱃지', '첫 번째 랭크 달성', '🥉', 'rank', 'score', 0, 'common'),
('실버 뱃지', '실버 랭크 달성', '🥈', 'rank', 'score', 1000, 'common'),
('골드 뱃지', '골드 랭크 달성', '🥇', 'rank', 'score', 3000, 'rare'),
('플래티넘 뱃지', '플래티넘 랭크 달성', '💎', 'rank', 'score', 6000, 'rare'),
('다이아몬드 뱃지', '다이아몬드 랭크 달성', '💠', 'rank', 'score', 10000, 'epic'),
('마스터 뱃지', '마스터 랭크 달성', '🏆', 'rank', 'score', 15000, 'epic'),
('그랜드마스터 뱃지', '그랜드마스터 랭크 달성', '👑', 'rank', 'score', 25000, 'legendary'),
('챌린저 뱃지', '챌린저 랭크 달성', '⭐', 'rank', 'score', 40000, 'legendary'),
('레전드 뱃지', '레전드 랭크 달성', '🌟', 'rank', 'score', 60000, 'legendary'),

-- 성취 뱃지
('첫 도전자', '첫 번째 챌린지 시작', '🎯', 'achievement', 'challenges', 1, 'common'),
('완주자', '첫 번째 챌린지 완료', '🏁', 'achievement', 'challenges', 1, 'common'),
('연속 도전자', '7일 연속 체크인', '🔥', 'achievement', 'streak', 7, 'rare'),
('불굴의 의지', '30일 연속 체크인', '💪', 'achievement', 'streak', 30, 'epic'),
('챌린지 마스터', '10개 챌린지 완료', '🎖️', 'achievement', 'challenges', 10, 'rare'),

-- 특별 뱃지
('얼리어답터', '앱 초기 사용자', '🚀', 'special', 'special', 0, 'legendary');
```

---

## 8. 성능 최적화

### 8.1 쿼리 최적화 전략

#### 8.1.1 자주 사용되는 쿼리 패턴
```sql
-- 1. 사용자 랭킹 조회 (인덱스: idx_users_score_rank)
SELECT id, name, total_score, current_rank 
FROM users 
WHERE is_active = TRUE 
ORDER BY total_score DESC 
LIMIT 10;

-- 2. 챌린지 목록 조회 (인덱스: idx_challenges_list)
SELECT * FROM challenges 
WHERE category_id = ? 
  AND is_active = TRUE 
  AND is_public = TRUE 
ORDER BY created_at DESC 
LIMIT 20 OFFSET ?;

-- 3. 사용자 참여 챌린지 (인덱스: idx_challenge_participants_user)
SELECT cp.*, c.title, c.difficulty 
FROM challenge_participants cp
JOIN challenges c ON cp.challenge_id = c.id
WHERE cp.user_id = ? 
  AND cp.status = 'active'
ORDER BY cp.joined_at DESC;

-- 4. 체크인 통계 (인덱스: idx_daily_checkins_stats)
SELECT DATE(checkin_date) as date, COUNT(*) as count
FROM daily_checkins dc
JOIN challenge_participants cp ON dc.participation_id = cp.id
WHERE cp.user_id = ?
  AND checkin_date >= DATE_SUB(NOW(), INTERVAL 7 DAY)
GROUP BY DATE(checkin_date)
ORDER BY date;
```

#### 8.1.2 집계 쿼리 최적화
```sql
-- 사용자 통계 계산 (한 번의 쿼리로 처리)
SELECT 
  u.total_score,
  u.completed_challenges,
  u.current_streak,
  u.longest_streak,
  COUNT(DISTINCT ub.badge_id) as badges_count,
  (SELECT COUNT(*) FROM challenge_participants cp2 
   WHERE cp2.user_id = u.id AND cp2.status = 'active') as active_challenges
FROM users u
LEFT JOIN user_badges ub ON u.id = ub.user_id
WHERE u.id = ?
GROUP BY u.id;
```

### 8.2 데이터베이스 설정 최적화

#### 8.2.1 MySQL 설정
```sql
-- InnoDB 버퍼 풀 크기 (메모리의 70-80%)
innodb_buffer_pool_size = 1G

-- 쿼리 캐시 설정
query_cache_type = 1
query_cache_size = 256M

-- 연결 설정
max_connections = 200
thread_cache_size = 16

-- 로그 설정
slow_query_log = 1
long_query_time = 2
```

#### 8.2.2 파티셔닝 계획 (향후 확장)
```sql
-- 대용량 데이터 테이블의 날짜 기반 파티셔닝
ALTER TABLE daily_checkins 
PARTITION BY RANGE (YEAR(checkin_date)) (
  PARTITION p2024 VALUES LESS THAN (2025),
  PARTITION p2025 VALUES LESS THAN (2026),
  PARTITION p2026 VALUES LESS THAN (2027),
  PARTITION p_future VALUES LESS THAN MAXVALUE
);
```

### 8.3 캐싱 전략

#### 8.3.1 Redis 캐싱 대상
- **사용자 세션 정보**: JWT 토큰 블랙리스트
- **랭킹 데이터**: 상위 100명 사용자 (1시간 캐시)
- **인기 챌린지**: 참여자 수 상위 20개 (30분 캐시)
- **카테고리 목록**: 전체 카테고리 (24시간 캐시)
- **뱃지 목록**: 전체 뱃지 정보 (24시간 캐시)

#### 8.3.2 애플리케이션 레벨 캐싱
```typescript
// 캐시 키 네이밍 컨벤션
const CACHE_KEYS = {
  USER_PROFILE: (userId: number) => `user:profile:${userId}`,
  USER_RANKING: () => 'ranking:users:top100',
  POPULAR_CHALLENGES: () => 'challenges:popular:top20',
  CATEGORIES: () => 'categories:all',
  USER_BADGES: (userId: number) => `user:badges:${userId}`,
};

// TTL 설정
const CACHE_TTL = {
  USER_PROFILE: 300,      // 5분
  RANKING: 3600,          // 1시간
  POPULAR_CHALLENGES: 1800, // 30분
  CATEGORIES: 86400,      // 24시간
  USER_BADGES: 1800,      // 30분
};
```

---

## 9. 백업 및 복구

### 9.1 백업 전략

#### 9.1.1 전체 백업 (Daily)
```bash
#!/bin/bash
# 매일 새벽 2시 실행되는 전체 백업 스크립트
DATE=$(date +%Y%m%d)
BACKUP_DIR="/backup/mysql"
DB_NAME="challenge_app"

# 전체 데이터베이스 백업
mysqldump --single-transaction --routines --triggers \
  --user=$DB_USER --password=$DB_PASS \
  $DB_NAME > $BACKUP_DIR/full_backup_$DATE.sql

# 압축
gzip $BACKUP_DIR/full_backup_$DATE.sql

# 7일 이상 된 백업 파일 삭제
find $BACKUP_DIR -name "full_backup_*.sql.gz" -mtime +7 -delete
```

#### 9.1.2 증분 백업 (Hourly)
```bash
#!/bin/bash
# 매시간 실행되는 증분 백업 (binlog 기반)
DATETIME=$(date +%Y%m%d_%H%M)
BACKUP_DIR="/backup/mysql/incremental"

# Binary log 백업
mysqlbinlog --start-datetime="1 hour ago" \
  /var/log/mysql/mysql-bin.* > $BACKUP_DIR/incremental_$DATETIME.sql

# 24시간 이상 된 증분 백업 파일 삭제
find $BACKUP_DIR -name "incremental_*.sql" -mtime +1 -delete
```

### 9.2 복구 전략

#### 9.2.1 전체 복구
```bash
#!/bin/bash
# 전체 데이터베이스 복구
BACKUP_FILE=$1
DB_NAME="challenge_app"

# 데이터베이스 재생성
mysql -u$DB_USER -p$DB_PASS -e "DROP DATABASE IF EXISTS $DB_NAME;"
mysql -u$DB_USER -p$DB_PASS -e "CREATE DATABASE $DB_NAME;"

# 백업 복원
gunzip -c $BACKUP_FILE | mysql -u$DB_USER -p$DB_PASS $DB_NAME
```

#### 9.2.2 특정 시점 복구 (Point-in-Time Recovery)
```bash
#!/bin/bash
# 특정 시점까지의 데이터 복구
BACKUP_FILE=$1
TARGET_DATETIME=$2
DB_NAME="challenge_app"

# 1. 전체 백업 복원
gunzip -c $BACKUP_FILE | mysql -u$DB_USER -p$DB_PASS $DB_NAME

# 2. 증분 백업 적용 (지정된 시점까지)
mysqlbinlog --stop-datetime="$TARGET_DATETIME" \
  /backup/mysql/incremental/incremental_*.sql | \
  mysql -u$DB_USER -p$DB_PASS $DB_NAME
```

### 9.3 재해 복구 계획

#### 9.3.1 RTO/RPO 목표
- **RTO (Recovery Time Objective)**: 4시간 이내
- **RPO (Recovery Point Objective)**: 1시간 이내
- **백업 보관 정책**: 
  - 일일 백업: 30일 보관
  - 주간 백업: 12주 보관
  - 월간 백업: 12개월 보관

#### 9.3.2 고가용성 구성 (향후 확장)
```sql
-- 마스터-슬레이브 복제 설정
-- 마스터 서버 설정
[mysqld]
server-id = 1
log-bin = mysql-bin
binlog-format = ROW
gtid-mode = ON
enforce-gtid-consistency = true

-- 슬레이브 서버 설정
[mysqld]
server-id = 2
relay-log = relay-bin
read-only = 1
gtid-mode = ON
enforce-gtid-consistency = true
```

---

## 10. 모니터링 및 운영

### 10.1 성능 모니터링

#### 10.1.1 모니터링 대상 메트릭
- **연결 수**: 현재 활성 연결 / 최대 연결 수
- **쿼리 성능**: 평균 응답 시간, 슬로우 쿼리 수
- **메모리 사용률**: InnoDB 버퍼 풀 사용률
- **디스크 I/O**: 읽기/쓰기 IOPS, 대기 시간
- **복제 지연**: 마스터-슬레이브 간 복제 지연 시간

#### 10.1.2 알럿 설정
- **연결 수 90% 초과**: 즉시 알럿
- **슬로우 쿼리 100개/시간 초과**: 경고 알럿
- **복제 지연 30초 초과**: 경고 알럿
- **디스크 사용량 85% 초과**: 경고 알럿

### 10.2 유지보수 작업

#### 10.2.1 정기 유지보수 스크립트
```sql
-- 매주 일요일 실행: 테이블 최적화
OPTIMIZE TABLE users, challenges, challenge_participants, daily_checkins;

-- 매월 1일 실행: 통계 정보 업데이트
ANALYZE TABLE users, challenges, challenge_participants, daily_checkins;

-- 매월 1일 실행: 오래된 데이터 정리 (6개월 이상 비활성 사용자의 알림)
DELETE FROM notifications 
WHERE created_at < DATE_SUB(NOW(), INTERVAL 6 MONTH)
  AND user_id IN (
    SELECT id FROM users 
    WHERE is_active = FALSE 
      AND updated_at < DATE_SUB(NOW(), INTERVAL 6 MONTH)
  );
```

---

**문서 끝**

*본 문서는 30일 챌린지 앱의 데이터베이스 구조를 정의하며, 시스템 확장에 따라 지속적으로 업데이트됩니다.*
